local slider_active = false
local slider_active_sound = false
local slider_active_music = false

local anim_back_node = false


-- local functions:
local slider




function init(self)
	msg.post("#", "disable")
end





function on_input(self, action_id, action)
	-- if message_id == hash("pause") then
	-- 	msg.post("#", "hide")

	if action_id == hash("touch") then
		if gui.pick_node(gui.get_node("pointer_sound"), action.x, action.y) then
			slider_active = true
			slider_active_sound = true
		elseif gui.pick_node(gui.get_node("pointer_music"), action.x, action.y) then
			slider_active = true
			slider_active_music = true
		end
	end


	if slider_active == true then
		if slider_active_sound == true then
			G_sound_vol = string.format("%.2f", slider("pointer_sound", -175, 175, action))
			sound.set_group_gain("sound", G_sound_vol)
		elseif slider_active_music == true then
			G_music_vol = string.format("%.2f", slider("pointer_music", -175, 175, action))
			sound.set_group_gain("music", G_music_vol)
		end
	end


	if action.released then 
		slider_active = false
		slider_active_sound = false
		slider_active_music = false
	end


	if gui.pick_node(gui.get_node("back_button_T"), action.x, action.y) then
		if not anim_back_node then
			anim_back_node = true
			animate_node(gui.get_node("back_button_C"), vmath.vector3(1,1,1), .06, "x")
			animate_node(gui.get_node("back_button_T"), vmath.vector3(.5, .5, 1), .08)
		end

		if action_id == hash("touch") and action.pressed then
			msg.post("#", "hide")
		end
	else
		gui.animate(gui.get_node("back_button_C"), "scale", vmath.vector3(1,1,1), go.EASING_INOUTSINE, 1)
		gui.animate(gui.get_node("back_button_T"), "scale", vmath.vector3(.5, .5, 1), go.EASING_INOUTSINE, 1)
		anim_back_node = false
	end
end




function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		--gui.set_render_order(2)
		--menu_options_visible = true

		set_start_slider_values()

		msg.post(".", "acquire_input_focus")
		msg.post("#", "enable")


	elseif message_id == hash("hide") then
		--menu_options_visible = false
		msg.post("#", "disable")
		sound.play("/sound#button_press")

		local file = sys.get_save_file("Bombix", "config.dzq")
		sys.save(file, {G_sound_vol = G_sound_vol, G_music_vol = G_music_vol})
	end
end




function slider(pointer, left, right, action)
	local pos_center, pos_pointer, pos
	pos = vmath.vector3(action.x, action.y , 0)
	pos_pointer = gui.get_position(gui.get_node(pointer))
	pos_center  = (window_w / 2)


	if pos.x - pos_center < left then 
		pos.x = left
	elseif pos.x - pos_center > right then 
		pos.x = right
	else
		pos.x = action.x - pos_center
	end

	gui.set_position(gui.get_node(pointer), vmath.vector3(pos.x, pos_pointer.y, 0))
	return (pos.x / (right * 2)) + .5
end




function set_start_slider_values()
	pos = gui.get_position(gui.get_node("pointer_sound"))
	pos.x = G_sound_vol * 350 - 175
	gui.set_position(gui.get_node("pointer_sound"), vmath.vector3(pos.x, pos.y, 0))
	
	pos = gui.get_position(gui.get_node("pointer_music"))
	pos.x = G_music_vol * 350 - 175
	gui.set_position(gui.get_node("pointer_music"), vmath.vector3(pos.x, pos.y, 0))
end
