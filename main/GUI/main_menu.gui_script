
-- local functions:
local animate_bomb




function init(self)
	msg.post(".", "acquire_input_focus")
	sound.play("/sound#menu_music")

	BG_table = {}
	for a = 1, 8 do
		local id = factory.create("/main#BG_factory")
		table.insert(BG_table, msg.url(nil, id, nil))
	end

	--gui.set_enabled(gui.get_node("title"), true)
	gui.play_particlefx(gui.get_node("bomb_fuse"))

	local node = gui.get_node("bomb")
	local rot = gui.get_rotation(node)
	animate_bomb(node, rot.z)
	gui.animate(gui.get_node("BG"),  "scale", vmath.vector3(.98, .99, 1), go.EASING_INOUTSINE, 16, 2, nil, gui.PLAYBACK_LOOP_PINGPONG)
	gui.animate(gui.get_node("BG2_1"), "scale", vmath.vector3(1.4, 1.5 ,1), go.EASING_INOUTSINE, 14, 2, nil, gui.PLAYBACK_LOOP_PINGPONG)
	gui.animate(gui.get_node("BG2_2"), "scale", vmath.vector3(1.4, 1.5 ,1), go.EASING_INOUTSINE, 18, 4, nil, gui.PLAYBACK_LOOP_PINGPONG)

	local node = gui.get_node("BG2_1") ; local color = gui.get_color(node)
	color.w = .6 ; gui.set_color(node, color)
	gui.animate(node, "color.w", 0, go.EASING_INOUTSINE, 12, 1, nil, gui.PLAYBACK_LOOP_PINGPONG)

	local node = gui.get_node("BG2_2") ; local color = gui.get_color(node)
	color.w = 0 ; gui.set_color(node, color)
	gui.animate(node, "color.w", .6, go.EASING_INOUTSINE, 12, 1, nil, gui.PLAYBACK_LOOP_PINGPONG)
end




function on_message(self, message_id, message, sender)

end




function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		if gui.pick_node(gui.get_node("start_C"), action.x, action.y) then
			msg.post("/main#ctrl", "start_game")
			msg.post(".", "disable")
		end

		if gui.pick_node(gui.get_node("options_C"), action.x, action.y) then
			msg.post("/gui#options", "show")
			--msg.post(".", "disable")
		end
	end
end




function animate_bomb(node, rot)
	gui.animate(node, "rotation.z", math.random(rot - 20, rot + 25), go.EASING_OUTBOUNCE, math.random(4, 8), 0, function()
		animate_bomb(node, rot)
	end)
end
